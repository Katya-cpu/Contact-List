import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by qmltyperegistrar.

Module {
    Component {
        file: "contactfiltermodel.h"
        name: "ContactFilterModel"
        accessSemantics: "reference"
        prototype: "QSortFilterProxyModel"
        exports: ["kurss/ContactFilterModel 1.0"]
        exportMetaObjectRevisions: [256]
        Property {
            name: "searchTerm"
            type: "QString"
            read: "searchTerm"
            write: "setSearchTerm"
            notify: "searchTermChanged"
            index: 0
        }
        Property {
            name: "source"
            type: "ContactModel"
            isPointer: true
            read: "source"
            write: "setSource"
            index: 1
        }
        Signal { name: "searchTermChanged" }
        Signal {
            name: "searchPerformance"
            Parameter { name: "nanoseconds"; type: "qlonglong" }
        }
        Method {
            name: "get"
            type: "QVariantMap"
            isMethodConstant: true
            Parameter { name: "row"; type: "int" }
        }
        Method {
            name: "append"
            Parameter { name: "fullName"; type: "QString" }
            Parameter { name: "address"; type: "QString" }
            Parameter { name: "city"; type: "QString" }
            Parameter { name: "number"; type: "QString" }
            Parameter { name: "workPhone"; type: "QString" }
            Parameter { name: "homePhone"; type: "QString" }
            Parameter { name: "email"; type: "QString" }
            Parameter { name: "birthDate"; type: "QString" }
            Parameter { name: "photo"; type: "QString" }
        }
        Method {
            name: "set"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "fullName"; type: "QString" }
            Parameter { name: "address"; type: "QString" }
            Parameter { name: "city"; type: "QString" }
            Parameter { name: "number"; type: "QString" }
            Parameter { name: "workPhone"; type: "QString" }
            Parameter { name: "homePhone"; type: "QString" }
            Parameter { name: "email"; type: "QString" }
            Parameter { name: "birthDate"; type: "QString" }
            Parameter { name: "photo"; type: "QString" }
        }
        Method {
            name: "remove"
            Parameter { name: "row"; type: "int" }
        }
    }
    Component {
        file: "contactmodel.h"
        name: "ContactModel"
        accessSemantics: "reference"
        prototype: "QAbstractListModel"
        exports: ["kurss/ContactModel 1.0"]
        exportMetaObjectRevisions: [256]
        Enum {
            name: "ContactRole"
            values: [
                "FullNameRole",
                "AddressRole",
                "CityRole",
                "NumberRole",
                "WorkPhoneRole",
                "HomePhoneRole",
                "EmailRole",
                "BirthDateRole",
                "PhotoRole"
            ]
        }
        Method {
            name: "get"
            type: "QVariantMap"
            isMethodConstant: true
            Parameter { name: "row"; type: "int" }
        }
        Method {
            name: "append"
            Parameter { name: "fullName"; type: "QString" }
            Parameter { name: "address"; type: "QString" }
            Parameter { name: "city"; type: "QString" }
            Parameter { name: "number"; type: "QString" }
            Parameter { name: "workPhone"; type: "QString" }
            Parameter { name: "homePhone"; type: "QString" }
            Parameter { name: "email"; type: "QString" }
            Parameter { name: "birthDate"; type: "QString" }
            Parameter { name: "photo"; type: "QString" }
        }
        Method {
            name: "set"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "fullName"; type: "QString" }
            Parameter { name: "address"; type: "QString" }
            Parameter { name: "city"; type: "QString" }
            Parameter { name: "number"; type: "QString" }
            Parameter { name: "workPhone"; type: "QString" }
            Parameter { name: "homePhone"; type: "QString" }
            Parameter { name: "email"; type: "QString" }
            Parameter { name: "birthDate"; type: "QString" }
            Parameter { name: "photo"; type: "QString" }
        }
        Method {
            name: "remove"
            Parameter { name: "row"; type: "int" }
        }
    }
    Component {
        file: "qabstractproxymodel.h"
        name: "QAbstractProxyModel"
        accessSemantics: "reference"
        prototype: "QAbstractItemModel"
        Property {
            name: "sourceModel"
            type: "QAbstractItemModel"
            isPointer: true
            bindable: "bindableSourceModel"
            read: "sourceModel"
            write: "setSourceModel"
            notify: "sourceModelChanged"
            index: 0
        }
        Signal { name: "sourceModelChanged" }
        Method { name: "_q_sourceModelDestroyed" }
        Method {
            name: "_q_sourceModelRowsAboutToBeInserted"
            Parameter { type: "QModelIndex" }
            Parameter { type: "int" }
            Parameter { type: "int" }
        }
        Method {
            name: "_q_sourceModelRowsInserted"
            Parameter { type: "QModelIndex" }
            Parameter { type: "int" }
            Parameter { type: "int" }
        }
        Method {
            name: "_q_sourceModelRowsRemoved"
            Parameter { type: "QModelIndex" }
            Parameter { type: "int" }
            Parameter { type: "int" }
        }
        Method {
            name: "_q_sourceModelColumnsAboutToBeInserted"
            Parameter { type: "QModelIndex" }
            Parameter { type: "int" }
            Parameter { type: "int" }
        }
        Method {
            name: "_q_sourceModelColumnsInserted"
            Parameter { type: "QModelIndex" }
            Parameter { type: "int" }
            Parameter { type: "int" }
        }
        Method {
            name: "_q_sourceModelColumnsRemoved"
            Parameter { type: "QModelIndex" }
            Parameter { type: "int" }
            Parameter { type: "int" }
        }
        Method {
            name: "mapToSource"
            type: "QModelIndex"
            isMethodConstant: true
            Parameter { name: "proxyIndex"; type: "QModelIndex" }
        }
        Method {
            name: "mapFromSource"
            type: "QModelIndex"
            isMethodConstant: true
            Parameter { name: "sourceIndex"; type: "QModelIndex" }
        }
        Method {
            name: "mapSelectionToSource"
            type: "QItemSelection"
            isMethodConstant: true
            Parameter { name: "selection"; type: "QItemSelection" }
        }
        Method {
            name: "mapSelectionFromSource"
            type: "QItemSelection"
            isMethodConstant: true
            Parameter { name: "selection"; type: "QItemSelection" }
        }
    }
    Component {
        file: "qsortfilterproxymodel.h"
        name: "QSortFilterProxyModel"
        accessSemantics: "reference"
        prototype: "QAbstractProxyModel"
        Property {
            name: "filterRegularExpression"
            type: "QRegularExpression"
            bindable: "bindableFilterRegularExpression"
            read: "filterRegularExpression"
            write: "setFilterRegularExpression"
            index: 0
        }
        Property {
            name: "filterKeyColumn"
            type: "int"
            bindable: "bindableFilterKeyColumn"
            read: "filterKeyColumn"
            write: "setFilterKeyColumn"
            index: 1
        }
        Property {
            name: "dynamicSortFilter"
            type: "bool"
            bindable: "bindableDynamicSortFilter"
            read: "dynamicSortFilter"
            write: "setDynamicSortFilter"
            index: 2
        }
        Property {
            name: "filterCaseSensitivity"
            type: "Qt::CaseSensitivity"
            bindable: "bindableFilterCaseSensitivity"
            read: "filterCaseSensitivity"
            write: "setFilterCaseSensitivity"
            notify: "filterCaseSensitivityChanged"
            index: 3
        }
        Property {
            name: "sortCaseSensitivity"
            type: "Qt::CaseSensitivity"
            bindable: "bindableSortCaseSensitivity"
            read: "sortCaseSensitivity"
            write: "setSortCaseSensitivity"
            notify: "sortCaseSensitivityChanged"
            index: 4
        }
        Property {
            name: "isSortLocaleAware"
            type: "bool"
            bindable: "bindableIsSortLocaleAware"
            read: "isSortLocaleAware"
            write: "setSortLocaleAware"
            notify: "sortLocaleAwareChanged"
            index: 5
        }
        Property {
            name: "sortRole"
            type: "int"
            bindable: "bindableSortRole"
            read: "sortRole"
            write: "setSortRole"
            notify: "sortRoleChanged"
            index: 6
        }
        Property {
            name: "filterRole"
            type: "int"
            bindable: "bindableFilterRole"
            read: "filterRole"
            write: "setFilterRole"
            notify: "filterRoleChanged"
            index: 7
        }
        Property {
            name: "recursiveFilteringEnabled"
            type: "bool"
            bindable: "bindableRecursiveFilteringEnabled"
            read: "isRecursiveFilteringEnabled"
            write: "setRecursiveFilteringEnabled"
            notify: "recursiveFilteringEnabledChanged"
            index: 8
        }
        Property {
            name: "autoAcceptChildRows"
            type: "bool"
            bindable: "bindableAutoAcceptChildRows"
            read: "autoAcceptChildRows"
            write: "setAutoAcceptChildRows"
            notify: "autoAcceptChildRowsChanged"
            index: 9
        }
        Signal {
            name: "dynamicSortFilterChanged"
            Parameter { name: "dynamicSortFilter"; type: "bool" }
        }
        Signal {
            name: "filterCaseSensitivityChanged"
            Parameter { name: "filterCaseSensitivity"; type: "Qt::CaseSensitivity" }
        }
        Signal {
            name: "sortCaseSensitivityChanged"
            Parameter { name: "sortCaseSensitivity"; type: "Qt::CaseSensitivity" }
        }
        Signal {
            name: "sortLocaleAwareChanged"
            Parameter { name: "sortLocaleAware"; type: "bool" }
        }
        Signal {
            name: "sortRoleChanged"
            Parameter { name: "sortRole"; type: "int" }
        }
        Signal {
            name: "filterRoleChanged"
            Parameter { name: "filterRole"; type: "int" }
        }
        Signal {
            name: "recursiveFilteringEnabledChanged"
            Parameter { name: "recursiveFilteringEnabled"; type: "bool" }
        }
        Signal {
            name: "autoAcceptChildRowsChanged"
            Parameter { name: "autoAcceptChildRows"; type: "bool" }
        }
        Method {
            name: "setFilterRegularExpression"
            Parameter { name: "pattern"; type: "QString" }
        }
        Method {
            name: "setFilterRegularExpression"
            Parameter { name: "regularExpression"; type: "QRegularExpression" }
        }
        Method {
            name: "setFilterWildcard"
            Parameter { name: "pattern"; type: "QString" }
        }
        Method {
            name: "setFilterFixedString"
            Parameter { name: "pattern"; type: "QString" }
        }
        Method { name: "invalidate" }
    }
}
